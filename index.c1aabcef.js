var t,e;(e=t||(t={})).CREATE_TODO="CREATE_TODO",e.UPDATE_TODO="UPDATE_TODO",e.REMOVE_TODO="REMOVE_TODO";var s,i,o=s=function(t,e){var s="000000000"+t;return s.substr(s.length-e)},n="object"==typeof window?window:self,d=Object.keys(n).length,r=o(((navigator.mimeTypes?navigator.mimeTypes.length:0)+navigator.userAgent.length).toString(36)+d.toString(36),4),a=function(){return r},h=s,c="undefined"!=typeof window&&(window.crypto||window.msCrypto)||"undefined"!=typeof self&&self.crypto;if(c){var l=Math.pow(2,32)-1;i=function(){return Math.abs(c.getRandomValues(new Uint32Array(1))[0]/l)}}else i=Math.random;var u=i,p=0,T=Math.pow(36,4);function E(){return h((u()*T<<0).toString(36),4)}function m(){return p=p<T?p:0,++p-1}function g(){return"c"+(new Date).getTime().toString(36)+h(m().toString(36),4)+a()+(E()+E())}g.slug=function(){var t=(new Date).getTime().toString(36),e=m().toString(36).slice(-4),s=a().slice(0,1)+a().slice(-1),i=E().slice(-2);return t.slice(-2)+e+s+i},g.isCuid=function(t){return"string"==typeof t&&!!t.startsWith("c")},g.isSlug=function(t){if("string"!=typeof t)return!1;var e=t.length;return e>=7&&e<=10},g.fingerprint=a;var w,f=(w=g)&&w.__esModule?w.default:w;const k=new class{constructor(t,e){if(this.document=t,this.handlers={},this.txtCache="",this.$root=this.document.querySelector(e),!this.$root)throw new Error(`root id, '${e}', must exist in doc`);this.$wrapper=this.createElement("div","wrapper"),this.$header=this.createElement("header"),this.$title=this.createElement("h1"),this.$title.textContent="Todos",this.$task=this.createElement("div","flex justify-between"),this.$taskTxt=this.createElement("input","task-txt"),this.$taskTxt.setAttribute("type","text"),this.$taskTxt.setAttribute("placeholder","Enter your task"),this.$taskBtn=this.createElement("button","task-btn"),this.$taskBtn.textContent="Add Task",this.$todos=this.createElement("ul","space-y-4"),this.$noTodos=this.createElement("p","hidden font-bold text-gray-500"),this.$noTodos.textContent="No tasks for you!",this.$header.append(this.$title),this.$task.append(this.$taskTxt,this.$taskBtn),this.$wrapper.append(this.$header,this.$task,this.$todos,this.$noTodos),this.$root.append(this.$wrapper),this.$taskBtn.addEventListener("click",this.createTodo.bind(this)),this.$todos.addEventListener("change",this.toggleTodo.bind(this)),this.$todos.addEventListener("click",this.removeTodo.bind(this)),this.$todos.addEventListener("focusin",this.cacheTodoTxt.bind(this)),this.$todos.addEventListener("focusout",this.updateTodo.bind(this))}registerHandler({event:t,handler:e}){this.handlers[t]=e}render(t){for(;this.$todos.firstChild;)this.$todos.firstChild.remove();0===t.length?this.$noTodos.classList.remove("hidden"):(this.$noTodos.classList.add("hidden"),this.$todos.append(...t.map((t=>this.createItem(t)))))}createTodo(){this.handlers[t.CREATE_TODO]?.({task:this.$taskTxt.value}),this.$taskTxt.value=""}toggleTodo(e){const s=e.target;s.classList.contains("todo-chk")&&this.handlers[t.UPDATE_TODO]?.({id:s.parentElement?.id,done:s.checked})}cacheTodoTxt(t){const e=t.target;e?.classList?.contains?.("todo-txt")&&(this.txtCache=e.textContent)}updateTodo(e){const s=e.target;s.classList.contains("todo-txt")&&(this.handlers[t.UPDATE_TODO]?.({id:s.parentElement?.id,task:s.textContent?s.textContent:this.txtCache}),this.txtCache="")}removeTodo(e){const s=e.target;s.classList.contains("todo-btn")&&this.handlers[t.REMOVE_TODO]?.({id:s.parentElement?.id})}createElement(t,e){const s=this.document.createElement(t);return e&&s.classList.add(...e.split(" ")),s}createItem(t){const e=this.createElement("li","todo");e.setAttribute("id",t.id);const s=this.createElement("input","todo-chk");s.setAttribute("type","checkbox"),t.done&&s.setAttribute("checked","");const i=this.createElement("span","todo-txt");i.setAttribute("contentEditable","");const o=this.document.createTextNode(t.task);if(t.done){const t=this.createElement("s");t.append(o),i.append(t)}else i.append(o);const n=this.createElement("button","todo-btn");return n.textContent="Delete",e.append(s,i,n),e}}(window.document,"#app"),v=new class{constructor(){this.todos=[]}insert(t){if(!t.task)throw new Error("No task. Todo 'task' is required. Insert failed.");const e={id:t.id??f(),task:t.task,done:t.done??!1};this.todos.push(e)}update(t){if(!t.id)throw new Error("No id. Todo 'id' is required. Update failed.");this.todos=this.todos.map((e=>e.id===t.id?{id:e.id,task:t.task??e.task,done:t.done??e.done}:e))}remove(t){if(!t)throw new Error("No id. Todo 'id' is required. Remove failed.");this.todos=this.todos.filter((e=>e.id!==t))}toJSON(){return this.todos}},$=new class{constructor(t,e){this.key=t,this.db=e}get(){return JSON.parse(this.db.getItem(this.key)??"[]")}set(t){this.db.setItem(this.key,JSON.stringify(t))}}("todos",localStorage);new class{constructor(e,s,i){this.todos=e,this.view=s,this.store=i,this.load(),this.view.registerHandler({event:t.CREATE_TODO,handler:this.handleCreateTodo.bind(this)}),this.view.registerHandler({event:t.UPDATE_TODO,handler:this.handleUpdateTodo.bind(this)}),this.view.registerHandler({event:t.REMOVE_TODO,handler:this.handleRemoveTodo.bind(this)})}load(){this.store.get().forEach((t=>{this.todos.insert(t)}))}save(){this.store.set(this.todos.toJSON())}show(){this.view.render(this.todos.toJSON())}handleCreateTodo(t){t.task&&(this.todos.insert({task:t.task}),this.save(),this.show())}handleUpdateTodo(t){t.id&&(this.todos.update({...t,id:t.id}),this.save(),this.show())}handleRemoveTodo(t){t.id&&(this.todos.remove(t.id),this.save(),this.show())}}(v,k,$).show();
//# sourceMappingURL=index.c1aabcef.js.map
